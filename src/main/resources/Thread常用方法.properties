#------------------------线程的创建------------------------
Thread()
Thread(String name)
Thread(Runnable target)
Thread(Runnable target, String name)
#------------------------线程的方法------------------------
#启动线程 
void start()	
#线程休眠
static void sleep(long millis)
static void sleep(long millis, int nanos)
#使其他线程等待当前线程终止
void join()
void join(long millis)
void join(long millis, int nanos)
#当前运行线程释放处理器资源
static void yield()
#------------------------获取线程引用------------------------
#返回当前运行的线程引用
static Thread currentThread()


#------------------------停止线程------------------------
void stop()
着重强调，不能使用stop方法来停止线程
为什么？因为stop是java1.0提供的一个停止线程的方式，如今这个方法已经被oracle标记成@Deprecated(弃用)
因为随着时代的变更，这个方法已经变得越来越多的缺点，如下
1.让我们的线程戛然而止
2.我们不知道我们的线程完成了什么工作
3.有哪些工作还没有做
4.无法做一些清理的工作
#------------------------存在争议的停止线程方法------------------------
void interrupt()
这个方法的初衷，并不是用来停止方法
example4有详细的讲解和例子
#------------------------正确停止线程------------------------
应该使用标记来停止线程
例如例子中的isKeepRunning变量，只要我们将这个值设置成flase,线程就会停止
使用变量来停止线程，可以使得我们的代码完成所有工作后再停止
而不会突然停止,如果使用stop方法中断线程，我们没法知道线程走到哪一步被终止了，还有多少代码没执行，一致性没法得到保证